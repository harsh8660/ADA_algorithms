#include <iostream>
#include <algorithm>
using namespace std;

void swap(int& a, int& b) {
    int temp = a;
    a = b;
    b = temp;
}

int partition(int arr[], int low, int high) {
    int pivot = arr[high];
    int i = low - 1;

    for (int j = low; j <= high - 1; j++) {
        if (arr[j] < pivot) {
            i++;
            swap(arr[i], arr[j]);
        }
    }
    swap(arr[i + 1], arr[high]);
    return (i + 1);
}

int quickSelect(int arr[], int low, int high, int k) {
    if (low <= high) {
        int pivotIndex = partition(arr, low, high);

        if (pivotIndex == k)
            return arr[pivotIndex];
        else if (pivotIndex < k)
            return quickSelect(arr, pivotIndex + 1, high, k);
        else
            return quickSelect(arr, low, pivotIndex - 1, k);
    }

    return -1;  // Invalid case
}

int main() {
    int n;

    cout << "Enter the size of the array: ";
    cin >> n;

    int arr[n];

    cout << "Enter the elements of the array:" << endl;
    for (int i = 0; i < n; i++) {
        cout << "Element " << i + 1 << ": ";
        cin >> arr[i];
    }

    int k;
    cout << "Enter the value of k (1-based index): ";
    cin >> k;

    if (k > 0 && k <= n) {
        int kthLargest = quickSelect(arr, 0, n - 1, n - k);

        cout << "The " << k << "th largest element is: " << kthLargest << endl;
    } else {
        cout << "Invalid value of k. It should be between 1 and " << n << endl;
    }

    return 0;
}
